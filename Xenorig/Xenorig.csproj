<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFramework>net8.0</TargetFramework>
        <OutputType>Exe</OutputType>
        <ApplicationIcon>Logo.ico</ApplicationIcon>

        <PackageId>TheDialgaTeam.Xenophyte.Xenorig</PackageId>
        <Version>1.1.0</Version>
        <Authors>Yong Jian Ming</Authors>
        <Company>The Dialga Team</Company>
        <Product>Xenorig</Product>
        <Description>Xenophyte cryptocurrency miner</Description>
        <PackageProjectUrl>https://github.com/TheDialgaTeam/Xenorig</PackageProjectUrl>
        <RepositoryUrl>https://github.com/TheDialgaTeam/Xenorig</RepositoryUrl>
        
        <PublishTrimmed>true</PublishTrimmed>
        <PublishReadyToRun>false</PublishReadyToRun>
        <PublishSingleFile>true</PublishSingleFile>

        <ImplicitUsings>enable</ImplicitUsings>
        <Nullable>enable</Nullable>
        <AllowUnsafeBlocks>True</AllowUnsafeBlocks>

        <EnableConfigurationBindingGenerator>false</EnableConfigurationBindingGenerator>
    </PropertyGroup>

    <PropertyGroup Condition="$(RuntimeIdentifier.StartsWith('win-x64')) or $(RuntimeIdentifier.StartsWith('linux-x64')) or $(RuntimeIdentifier.StartsWith('osx-x64'))">
        <PublishAot>true</PublishAot>
        <PublishSingleFile>false</PublishSingleFile>
    </PropertyGroup>

    <ItemGroup>
        <Content Include="Logo.ico" />

        <Content Include="appsettings.json">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="Grpc.Net.Client" Version="2.60.0" />
        <PackageReference Include="JetBrains.Annotations" Version="2023.3.0" />
        <PackageReference Include="Microsoft.Extensions.Hosting" Version="8.0.0" />
        <PackageReference Include="TheDialgaTeam.Core.Logging.Microsoft" Version="1.8.0" />
        <PackageReference Include="TheDialgaTeam.Serilog" Version="1.4.0" />

        <ProjectReference Include="..\Xenolib\Xenolib.csproj" />
    </ItemGroup>

    <ItemGroup Condition="'$(RuntimeIdentifier)'==''">
        <Content Include="..\XenoLibNative\build\install\bin\libxeno_native.dll" Link="xeno_native.dll">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
    </ItemGroup>

    <ItemGroup Condition="$(RuntimeIdentifier.StartsWith('win-x64'))">
        <DirectPInvoke Include="kernel32" />
        <DirectPInvoke Include="xeno_native" />

        <NativeLibrary Include="..\XenoLibNative\build\install\lib\libxeno_native.dll.a" />

        <Content Include="..\XenoLibNative\build\install\bin\libxeno_native.dll" Link="libxeno_native.dll">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
    </ItemGroup>

    <ItemGroup Condition="$(RuntimeIdentifier.StartsWith('win-x86'))">
        <Content Include="..\XenoLibNative\build\install\bin\libxeno_native.dll" Link="xeno_native.dll">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
    </ItemGroup>

    <ItemGroup Condition="$(RuntimeIdentifier.StartsWith('win-arm'))">
        <Content Include="..\XenoLibNative\build\install\bin\xeno_native.dll" Link="xeno_native.dll">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
    </ItemGroup>

    <ItemGroup Condition="$(RuntimeIdentifier.StartsWith('win-arm64'))">
        <Content Include="..\XenoLibNative\build\install\bin\xeno_native.dll" Link="xeno_native.dll">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
    </ItemGroup>

    <ItemGroup Condition="$(RuntimeIdentifier.StartsWith('linux-x64'))">
        <DirectPInvoke Include="libc" />
        <DirectPInvoke Include="libxeno_native" />

        <NativeLibrary Include="..\XenoLibNative\build\install\lib\libxeno_native.a" />

        <Content Include="..\XenoLibNative\build\install\lib\libxeno_native.so.1.0.0" Link="libxeno_native.so">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
    </ItemGroup>

    <ItemGroup Condition="$(RuntimeIdentifier.StartsWith('linux-arm'))">
        <Content Include="..\XenoLibNative\build\install\lib\libxeno_native.so.1.0.0" Link="libxeno_native.so">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
    </ItemGroup>

    <ItemGroup Condition="$(RuntimeIdentifier.StartsWith('linux-arm64'))">
        <Content Include="..\XenoLibNative\build\install\lib\libxeno_native.so.1.0.0" Link="libxeno_native.so">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
    </ItemGroup>

    <ItemGroup Condition="$(RuntimeIdentifier.StartsWith('osx-x64'))">
        <DirectPInvoke Include="libxeno_native" />

        <NativeLibrary Include="..\XenoLibNative\build\install\lib\libxeno_native.a" />

        <Content Include="..\XenoLibNative\build\install\lib\libxeno_native.1.0.0.dylib" Link="libxeno_native.dylib">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
    </ItemGroup>

</Project>