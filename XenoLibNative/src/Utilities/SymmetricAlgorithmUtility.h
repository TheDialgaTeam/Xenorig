#ifndef SYMMETRICALGORITHMUTILITY_H
#define SYMMETRICALGORITHMUTILITY_H

#include "global.h"
#include "openssl/evp.h"

DOTNET_INT SymmetricAlgorithmUtility_GetPaddedLength(DOTNET_INT size);

DOTNET_INT SymmetricAlgorithmUtility_Encrypt_EVP_CIPHER(const EVP_CIPHER *type, DOTNET_READ_ONLY_SPAN_BYTE key, DOTNET_READ_ONLY_SPAN_BYTE iv, DOTNET_READ_ONLY_SPAN_BYTE source, DOTNET_INT sourceLength, DOTNET_SPAN_BYTE destination);
DOTNET_INT SymmetricAlgorithmUtility_Decrypt_EVP_CIPHER(const EVP_CIPHER *type, DOTNET_READ_ONLY_SPAN_BYTE key, DOTNET_READ_ONLY_SPAN_BYTE iv, DOTNET_READ_ONLY_SPAN_BYTE source, DOTNET_INT sourceLength, DOTNET_SPAN_BYTE destination);

DOTNET_INT SymmetricAlgorithmUtility_Encrypt_AES_128_CBC(DOTNET_READ_ONLY_SPAN_BYTE key, DOTNET_READ_ONLY_SPAN_BYTE iv, DOTNET_READ_ONLY_SPAN_BYTE source, DOTNET_INT sourceLength, DOTNET_SPAN_BYTE destination);
DOTNET_INT SymmetricAlgorithmUtility_Encrypt_AES_192_CBC(DOTNET_READ_ONLY_SPAN_BYTE key, DOTNET_READ_ONLY_SPAN_BYTE iv, DOTNET_READ_ONLY_SPAN_BYTE source, DOTNET_INT sourceLength, DOTNET_SPAN_BYTE destination);
DOTNET_INT SymmetricAlgorithmUtility_Encrypt_AES_256_CBC(DOTNET_READ_ONLY_SPAN_BYTE key, DOTNET_READ_ONLY_SPAN_BYTE iv, DOTNET_READ_ONLY_SPAN_BYTE source, DOTNET_INT sourceLength, DOTNET_SPAN_BYTE destination);
DOTNET_INT SymmetricAlgorithmUtility_Encrypt_AES_256_CFB_8(DOTNET_READ_ONLY_SPAN_BYTE key, DOTNET_READ_ONLY_SPAN_BYTE iv, DOTNET_READ_ONLY_SPAN_BYTE source, DOTNET_INT sourceLength, DOTNET_SPAN_BYTE destination);
DOTNET_INT SymmetricAlgorithmUtility_Decrypt_AES_256_CFB_8(DOTNET_READ_ONLY_SPAN_BYTE key, DOTNET_READ_ONLY_SPAN_BYTE iv, DOTNET_READ_ONLY_SPAN_BYTE source, DOTNET_INT sourceLength, DOTNET_SPAN_BYTE destination);

#endif
